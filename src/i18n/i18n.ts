import i18n from 'i18next'
import { initReactI18next } from 'react-i18next'
import LanguageDetector from 'i18next-browser-languagedetector'

const resources = {
  en: {
    translation: {
      // Popup
      'popup.title': 'Routine Reminder',
      'popup.settings': 'Settings',
      'popup.error': 'Failed to load configuration',
      'popup.status.sent': 'Completed Today',
      'popup.status.pending': 'Pending',
      'popup.status.notWorkDay': 'No Routine',
      'popup.status.pastDeadline': 'Past Deadline',
      'popup.status.timeRemaining': '{{hours}}h {{minutes}}m',
      'popup.status.minutesRemaining': '{{minutes}}m',
      'popup.template.title': 'Routine Template',
      'popup.template.copy': 'Copy',
      'popup.template.copied': 'Copied!',
      'popup.actions.markSent': 'Mark as Done',

      // Options
      'options.title': 'Routine Reminder Settings',
      'options.description': 'Configure reminder schedules and templates',
      'options.nav.general': 'General',
      'options.nav.rules': 'Reminder Rules',
      'options.nav.template': 'Default Template',
      'options.nav.statistics': 'Statistics',
      'options.workDays.title': 'Schedule & Timing',
      'options.workDays.selectDays': 'Active Days',
      'options.workDays.days.Mon': 'Mon',
      'options.workDays.days.Tue': 'Tue',
      'options.workDays.days.Wed': 'Wed',
      'options.workDays.days.Thu': 'Thu',
      'options.workDays.days.Fri': 'Fri',
      'options.workDays.days.Sat': 'Sat',
      'options.workDays.days.Sun': 'Sun',
      'options.workDays.startTime': 'Start Reminder Time',
      'options.workDays.deadline': 'Deadline',
      'options.workDays.interval': 'Reminder Interval (minutes)',
      'options.workDays.intervalHint': 'Interval between reminders',
      'options.workDays.toastDuration': 'Toast Display Time (seconds)',
      'options.workDays.toastDurationHint': 'How long the toast notification stays visible',
      'options.workDays.toastMessage': 'Toast Message',
      'options.workDays.toastMessageHint': 'Custom message displayed in the toast notification',
      'options.workDays.toastMessagePlaceholder': "Don't forget today's routine!",
      'options.workDays.lateReminders': 'Late Reminders',
      'options.workDays.addLateReminder': 'Add',
      'options.workDays.remove': 'Remove',
      'options.template.title': 'Default Template',
      'options.template.content': 'Template Content',
      'options.template.placeholder': 'Enter your routine template...',
      'options.template.hint': 'Used whenever a rule has no custom template defined',
      'options.template.reset': 'Reset to Default',
      'options.other.title': 'Other Settings',
      'options.other.language': 'Language',
      'options.other.languageHint': 'Changing language automatically updates templates and reminders',
      'options.other.timezone': 'Timezone',
      'options.other.timezoneHint': 'System timezone (read-only)',
      'options.other.export': 'Export Config',
      'options.other.import': 'Import Config',
      'options.save.button': 'Save Settings',
      'options.save.saving': 'Saving...',
      'options.save.success': 'Settings saved successfully!',
      'options.save.error': 'Failed to save settings',
      'options.export.error': 'Failed to export configuration',
      'options.import.success': 'Configuration imported successfully!',
      'options.import.error': 'Failed to import configuration. Please check the file format.',
    },
  },
  zh: {
    translation: {
      // Popup
      'popup.title': '日常提醒助手',
      'popup.settings': '设置',
      'popup.error': '加载配置失败',
      'popup.status.sent': '今日已完成',
      'popup.status.pending': '待完成',
      'popup.status.notWorkDay': '今日无需提醒',
      'popup.status.pastDeadline': '已过截止时间',
      'popup.status.timeRemaining': '{{hours}}小时{{minutes}}分钟',
      'popup.status.minutesRemaining': '{{minutes}}分钟',
      'popup.template.title': '提醒模板',
      'popup.template.copy': '复制',
      'popup.template.copied': '已复制！',
      'popup.actions.markSent': '标记已完成',

      // Options
      'options.title': '日常提醒助手设置',
      'options.description': '配置您的提醒计划与模板',
      'options.nav.general': '常规',
      'options.nav.rules': '提醒规则',
      'options.nav.template': '默认模板',
      'options.nav.statistics': '统计',
      'options.workDays.title': '提醒日期与时间',
      'options.workDays.selectDays': '启用日期',
      'options.workDays.days.Mon': '周一',
      'options.workDays.days.Tue': '周二',
      'options.workDays.days.Wed': '周三',
      'options.workDays.days.Thu': '周四',
      'options.workDays.days.Fri': '周五',
      'options.workDays.days.Sat': '周六',
      'options.workDays.days.Sun': '周日',
      'options.workDays.startTime': '开始提醒时间',
      'options.workDays.deadline': '截止时间',
      'options.workDays.interval': '提醒间隔（分钟）',
      'options.workDays.intervalHint': '两次提醒之间的间隔时间',
      'options.workDays.toastDuration': 'Toast 显示时长（秒）',
      'options.workDays.toastDurationHint': 'Toast 提醒在页面上显示的时间',
      'options.workDays.toastMessage': 'Toast 提醒内容',
      'options.workDays.toastMessageHint': 'Toast 通知中显示的自定义消息',
      'options.workDays.toastMessagePlaceholder': '别忘了完成今日例行任务！',
      'options.workDays.lateReminders': '迟到补提醒',
      'options.workDays.addLateReminder': '添加',
      'options.workDays.remove': '删除',
      'options.template.title': '默认模板',
      'options.template.content': '模板内容',
      'options.template.placeholder': '输入您的提醒模板...',
      'options.template.hint': '当规则没有自定义模板时，会使用此默认模板',
      'options.template.reset': '重置为默认',
      'options.other.title': '其他设置',
      'options.other.language': '语言',
      'options.other.languageHint': '切换语言会自动更新模板与提醒内容',
      'options.other.timezone': '时区',
      'options.other.timezoneHint': '系统时区（只读）',
      'options.other.export': '导出配置',
      'options.other.import': '导入配置',
      'options.save.button': '保存设置',
      'options.save.saving': '保存中...',
      'options.save.success': '设置保存成功！',
      'options.save.error': '保存设置失败',
      'options.export.error': '导出配置失败',
      'options.import.success': '配置导入成功！',
      'options.import.error': '导入配置失败，请检查文件格式。',
    },
  },
}

i18n
  .use(initReactI18next)
  .use(LanguageDetector)
  .init({
    fallbackLng: 'en',
    resources,
    interpolation: {
      escapeValue: false, // react already safes from xss
    },
    detection: {
      order: ['localStorage', 'navigator'],
      caches: ['localStorage'],
      lookupLocalStorage: 'language',
    },
  })

export default i18n
